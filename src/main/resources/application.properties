# 서버 설정
server.port=8000

# 프로젝트 설정
spring.main.banner-mode=off
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true

# Global 파라메터
custom.firebase.sdk.path=src/main/resources/FirebaseAdminSDK.json
custom.firebase.database.url=https://nodejs-54f7b-default-rtdb.firebaseio.com

# JWT토큰 비밀키
spring.jwt.secret.signature=SHINHYOCHEOL

# MySQL 설정 및 DB 연결정보
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/sakila?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul
spring.datasource.username=root
spring.datasource.password=1234

# true 설정시 JPA 쿼리문 확인 가능
spring.jpa.show-sql=true
# DDL(Create, Alter, Drop) 정의시 DB의 고유 기능을 사용할 수 있다.
spring.jpa.hibernate.ddl-auto=update
# JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여준다.
spring.jpa.properties.hibernate.format_sql=true

# 프로젝트 인코딩을 UTF-8로 설정
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true


# 이메일 전송을 위한 Properties 설정
mail.smtp.auth=true
mail.smtp.starttls.required=true
mail.smtp.starttls.enable=true
mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
mail.smtp.socketFactory.fallback=false
mail.smtp.port=465
mail.smtp.socketFactory.port=465
 
# admin 구글 계정
AdminMail.id=a5869a
AdminMail.password=sybvifbfdfnighch

# request 최대용량 설정
server.max-http-header-size=400000

# DeepLeaning 모델을 훈련해서 로드할지 여부 - 개발을 위해 빠른 서버 재기동이 필요할 경우
model.fastText.analyzeYn=N
model.word2Vec.analyzeYn=N

# Elastic Search 설정
spring.elasticsearch.username=elstic
spring.elasticsearch.password=78keTToBM+ALeGD5AOD7
spring.elasticsearch.uris=localhost:9200